// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: video.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCompressionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Videolink     string                 `protobuf:"bytes,1,opt,name=videolink,proto3" json:"videolink,omitempty"`
	Duration      string                 `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCompressionRequest) Reset() {
	*x = GetCompressionRequest{}
	mi := &file_video_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCompressionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompressionRequest) ProtoMessage() {}

func (x *GetCompressionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompressionRequest.ProtoReflect.Descriptor instead.
func (*GetCompressionRequest) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{0}
}

func (x *GetCompressionRequest) GetVideolink() string {
	if x != nil {
		return x.Videolink
	}
	return ""
}

func (x *GetCompressionRequest) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

type GetCompressionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCompressionResponse) Reset() {
	*x = GetCompressionResponse{}
	mi := &file_video_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCompressionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompressionResponse) ProtoMessage() {}

func (x *GetCompressionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompressionResponse.ProtoReflect.Descriptor instead.
func (*GetCompressionResponse) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{1}
}

func (x *GetCompressionResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Tags struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CompatibleBrands string                 `protobuf:"bytes,1,opt,name=compatible_brands,json=compatibleBrands,proto3" json:"compatible_brands,omitempty"`
	Encoder          string                 `protobuf:"bytes,2,opt,name=encoder,proto3" json:"encoder,omitempty"`
	MajorBrand       string                 `protobuf:"bytes,3,opt,name=major_brand,json=majorBrand,proto3" json:"major_brand,omitempty"`
	MinorVersion     string                 `protobuf:"bytes,4,opt,name=minor_version,json=minorVersion,proto3" json:"minor_version,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Tags) Reset() {
	*x = Tags{}
	mi := &file_video_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tags) ProtoMessage() {}

func (x *Tags) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tags.ProtoReflect.Descriptor instead.
func (*Tags) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{2}
}

func (x *Tags) GetCompatibleBrands() string {
	if x != nil {
		return x.CompatibleBrands
	}
	return ""
}

func (x *Tags) GetEncoder() string {
	if x != nil {
		return x.Encoder
	}
	return ""
}

func (x *Tags) GetMajorBrand() string {
	if x != nil {
		return x.MajorBrand
	}
	return ""
}

func (x *Tags) GetMinorVersion() string {
	if x != nil {
		return x.MinorVersion
	}
	return ""
}

type Metadata struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Filename       string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	NbStreams      int32                  `protobuf:"varint,2,opt,name=nb_streams,json=nbStreams,proto3" json:"nb_streams,omitempty"`
	NbPrograms     int32                  `protobuf:"varint,3,opt,name=nb_programs,json=nbPrograms,proto3" json:"nb_programs,omitempty"`
	FormatName     string                 `protobuf:"bytes,4,opt,name=format_name,json=formatName,proto3" json:"format_name,omitempty"`
	FormatLongName string                 `protobuf:"bytes,5,opt,name=format_long_name,json=formatLongName,proto3" json:"format_long_name,omitempty"`
	StartTime      string                 `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Duration       string                 `protobuf:"bytes,7,opt,name=duration,proto3" json:"duration,omitempty"`
	Size           string                 `protobuf:"bytes,8,opt,name=size,proto3" json:"size,omitempty"`
	BitRate        string                 `protobuf:"bytes,9,opt,name=bit_rate,json=bitRate,proto3" json:"bit_rate,omitempty"`
	ProbeScore     int32                  `protobuf:"varint,10,opt,name=probe_score,json=probeScore,proto3" json:"probe_score,omitempty"`
	Tags           *Tags                  `protobuf:"bytes,11,opt,name=tags,proto3" json:"tags,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_video_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{3}
}

func (x *Metadata) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Metadata) GetNbStreams() int32 {
	if x != nil {
		return x.NbStreams
	}
	return 0
}

func (x *Metadata) GetNbPrograms() int32 {
	if x != nil {
		return x.NbPrograms
	}
	return 0
}

func (x *Metadata) GetFormatName() string {
	if x != nil {
		return x.FormatName
	}
	return ""
}

func (x *Metadata) GetFormatLongName() string {
	if x != nil {
		return x.FormatLongName
	}
	return ""
}

func (x *Metadata) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Metadata) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Metadata) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *Metadata) GetBitRate() string {
	if x != nil {
		return x.BitRate
	}
	return ""
}

func (x *Metadata) GetProbeScore() int32 {
	if x != nil {
		return x.ProbeScore
	}
	return 0
}

func (x *Metadata) GetTags() *Tags {
	if x != nil {
		return x.Tags
	}
	return nil
}

type GetMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetadataRequest) Reset() {
	*x = GetMetadataRequest{}
	mi := &file_video_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetadataRequest) ProtoMessage() {}

func (x *GetMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetMetadataRequest) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{4}
}

func (x *GetMetadataRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetMetadataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *Metadata              `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetadataResponse) Reset() {
	*x = GetMetadataResponse{}
	mi := &file_video_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetadataResponse) ProtoMessage() {}

func (x *GetMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetMetadataResponse) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{5}
}

func (x *GetMetadataResponse) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type GetVideoDetailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVideoDetailsRequest) Reset() {
	*x = GetVideoDetailsRequest{}
	mi := &file_video_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideoDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoDetailsRequest) ProtoMessage() {}

func (x *GetVideoDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetVideoDetailsRequest) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{6}
}

func (x *GetVideoDetailsRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetVideoDetailsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Link          string                 `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	OldMetadata   *Metadata              `protobuf:"bytes,2,opt,name=oldMetadata,proto3" json:"oldMetadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVideoDetailsResponse) Reset() {
	*x = GetVideoDetailsResponse{}
	mi := &file_video_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideoDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoDetailsResponse) ProtoMessage() {}

func (x *GetVideoDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetVideoDetailsResponse) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{7}
}

func (x *GetVideoDetailsResponse) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *GetVideoDetailsResponse) GetOldMetadata() *Metadata {
	if x != nil {
		return x.OldMetadata
	}
	return nil
}

var File_video_proto protoreflect.FileDescriptor

const file_video_proto_rawDesc = "" +
	"\n" +
	"\vvideo.proto\x12\awrapper\"Q\n" +
	"\x15GetCompressionRequest\x12\x1c\n" +
	"\tvideolink\x18\x01 \x01(\tR\tvideolink\x12\x1a\n" +
	"\bduration\x18\x02 \x01(\tR\bduration\",\n" +
	"\x16GetCompressionResponse\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"\x93\x01\n" +
	"\x04Tags\x12+\n" +
	"\x11compatible_brands\x18\x01 \x01(\tR\x10compatibleBrands\x12\x18\n" +
	"\aencoder\x18\x02 \x01(\tR\aencoder\x12\x1f\n" +
	"\vmajor_brand\x18\x03 \x01(\tR\n" +
	"majorBrand\x12#\n" +
	"\rminor_version\x18\x04 \x01(\tR\fminorVersion\"\xdf\x02\n" +
	"\bMetadata\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x1d\n" +
	"\n" +
	"nb_streams\x18\x02 \x01(\x05R\tnbStreams\x12\x1f\n" +
	"\vnb_programs\x18\x03 \x01(\x05R\n" +
	"nbPrograms\x12\x1f\n" +
	"\vformat_name\x18\x04 \x01(\tR\n" +
	"formatName\x12(\n" +
	"\x10format_long_name\x18\x05 \x01(\tR\x0eformatLongName\x12\x1d\n" +
	"\n" +
	"start_time\x18\x06 \x01(\tR\tstartTime\x12\x1a\n" +
	"\bduration\x18\a \x01(\tR\bduration\x12\x12\n" +
	"\x04size\x18\b \x01(\tR\x04size\x12\x19\n" +
	"\bbit_rate\x18\t \x01(\tR\abitRate\x12\x1f\n" +
	"\vprobe_score\x18\n" +
	" \x01(\x05R\n" +
	"probeScore\x12!\n" +
	"\x04tags\x18\v \x01(\v2\r.wrapper.TagsR\x04tags\"(\n" +
	"\x12GetMetadataRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"D\n" +
	"\x13GetMetadataResponse\x12-\n" +
	"\bmetadata\x18\x01 \x01(\v2\x11.wrapper.MetadataR\bmetadata\",\n" +
	"\x16GetVideoDetailsRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"b\n" +
	"\x17GetVideoDetailsResponse\x12\x12\n" +
	"\x04link\x18\x01 \x01(\tR\x04link\x123\n" +
	"\voldMetadata\x18\x02 \x01(\v2\x11.wrapper.MetadataR\voldMetadata2g\n" +
	"\x12CompressionService\x12Q\n" +
	"\x0eGetCompression\x12\x1e.wrapper.GetCompressionRequest\x1a\x1f.wrapper.GetCompressionResponse2[\n" +
	"\x0fMetadataService\x12H\n" +
	"\vGetMetadata\x12\x1b.wrapper.GetMetadataRequest\x1a\x1c.wrapper.GetMetadataResponse2d\n" +
	"\fVideoService\x12T\n" +
	"\x0fGetVideoDetails\x12\x1f.wrapper.GetVideoDetailsRequest\x1a .wrapper.GetVideoDetailsResponseB\x06Z\x04/genb\x06proto3"

var (
	file_video_proto_rawDescOnce sync.Once
	file_video_proto_rawDescData []byte
)

func file_video_proto_rawDescGZIP() []byte {
	file_video_proto_rawDescOnce.Do(func() {
		file_video_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_video_proto_rawDesc), len(file_video_proto_rawDesc)))
	})
	return file_video_proto_rawDescData
}

var file_video_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_video_proto_goTypes = []any{
	(*GetCompressionRequest)(nil),   // 0: wrapper.GetCompressionRequest
	(*GetCompressionResponse)(nil),  // 1: wrapper.GetCompressionResponse
	(*Tags)(nil),                    // 2: wrapper.Tags
	(*Metadata)(nil),                // 3: wrapper.Metadata
	(*GetMetadataRequest)(nil),      // 4: wrapper.GetMetadataRequest
	(*GetMetadataResponse)(nil),     // 5: wrapper.GetMetadataResponse
	(*GetVideoDetailsRequest)(nil),  // 6: wrapper.GetVideoDetailsRequest
	(*GetVideoDetailsResponse)(nil), // 7: wrapper.GetVideoDetailsResponse
}
var file_video_proto_depIdxs = []int32{
	2, // 0: wrapper.Metadata.tags:type_name -> wrapper.Tags
	3, // 1: wrapper.GetMetadataResponse.metadata:type_name -> wrapper.Metadata
	3, // 2: wrapper.GetVideoDetailsResponse.oldMetadata:type_name -> wrapper.Metadata
	0, // 3: wrapper.CompressionService.GetCompression:input_type -> wrapper.GetCompressionRequest
	4, // 4: wrapper.MetadataService.GetMetadata:input_type -> wrapper.GetMetadataRequest
	6, // 5: wrapper.VideoService.GetVideoDetails:input_type -> wrapper.GetVideoDetailsRequest
	1, // 6: wrapper.CompressionService.GetCompression:output_type -> wrapper.GetCompressionResponse
	5, // 7: wrapper.MetadataService.GetMetadata:output_type -> wrapper.GetMetadataResponse
	7, // 8: wrapper.VideoService.GetVideoDetails:output_type -> wrapper.GetVideoDetailsResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_video_proto_init() }
func file_video_proto_init() {
	if File_video_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_video_proto_rawDesc), len(file_video_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_video_proto_goTypes,
		DependencyIndexes: file_video_proto_depIdxs,
		MessageInfos:      file_video_proto_msgTypes,
	}.Build()
	File_video_proto = out.File
	file_video_proto_goTypes = nil
	file_video_proto_depIdxs = nil
}
